name: Deploy to GitHub Pages & Remote Server

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Single build job that creates both versions
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build for GitHub Pages
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      # Build for GitHub Pages
      - name: Build for GitHub Pages
        env:
          ASTRO_SITE: "https://istrail-laboratory.github.io"
          ASTRO_BASE: "/"
        run: npm run build
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      # Build for Remote Server
      - name: Clean and rebuild for Remote Server
        env:
          ASTRO_SITE: "https://cs.brown.edu"
          ASTRO_BASE: "/people/sistrail/"
        run: |
          rm -rf dist
          npm run build
      
      - name: Upload Remote artifact
        uses: actions/upload-artifact@v4
        with:
          name: remote-build
          path: dist
          retention-days: 1

  # Deploy to GitHub Pages
  deploy-github-pages:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deploy to Remote Server
  deploy-remote:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Remote artifact
        uses: actions/download-artifact@v4
        with:
          name: remote-build
          path: dist-remote

      - name: Deploy to Remote Server via rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzr --delete --omit-dir-times
          path: dist-remote/
          remote_path: ${{ vars.REMOTE_PATH }}
          remote_host: ${{ vars.REMOTE_HOST }}
          remote_user: ${{ vars.REMOTE_USER }}
          remote_key: ${{ secrets.DEPT_KEY }}
